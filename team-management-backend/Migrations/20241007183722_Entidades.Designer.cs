// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using team_management_backend;

#nullable disable

namespace team_management_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241007183722_Entidades")]
    partial class Entidades
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("team_management_backend.Entities.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEquipo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoAsignacion")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEquipo")
                        .IsUnique();

                    b.HasIndex("IdTipoAsignacion");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("team_management_backend.Entities.CaracteristicasTransporte", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AñoCompra")
                        .HasColumnType("int");

                    b.Property<string>("Cilindrada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Combustible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroPuertas")
                        .HasColumnType("int");

                    b.Property<string>("Placas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transmision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CaracteristicasTransportes");
                });

            modelBuilder.Entity("team_management_backend.Entities.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGarantia")
                        .HasColumnType("int");

                    b.Property<int>("IdPoliza")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoEquipo")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdGarantia");

                    b.HasIndex("IdPoliza");

                    b.HasIndex("IdTipoEquipo");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("team_management_backend.Entities.EquipoHardware", b =>
                {
                    b.Property<int>("IdEquipo")
                        .HasColumnType("int");

                    b.Property<int>("IdHardware")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEquipo", "IdHardware");

                    b.HasIndex("IdHardware");

                    b.ToTable("EquiposHardware");
                });

            modelBuilder.Entity("team_management_backend.Entities.EquipoSoftware", b =>
                {
                    b.Property<int>("IdEquipo")
                        .HasColumnType("int");

                    b.Property<int>("IdSoftware")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEquipo", "IdSoftware");

                    b.HasIndex("IdSoftware");

                    b.ToTable("EquiposSoftware");
                });

            modelBuilder.Entity("team_management_backend.Entities.Garantia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Garantia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Garantias");
                });

            modelBuilder.Entity("team_management_backend.Entities.Hardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hardwares");
                });

            modelBuilder.Entity("team_management_backend.Entities.Poliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aseguradora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cobertura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_poliza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Polizas");
                });

            modelBuilder.Entity("team_management_backend.Entities.Software", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInstalacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Softwares");
                });

            modelBuilder.Entity("team_management_backend.Entities.TipoAsignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposAsignacion");
                });

            modelBuilder.Entity("team_management_backend.Entities.TipoEquipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposEquipo");
                });

            modelBuilder.Entity("team_management_backend.Entities.Asignacion", b =>
                {
                    b.HasOne("team_management_backend.Entities.Equipo", "Equipo")
                        .WithOne()
                        .HasForeignKey("team_management_backend.Entities.Asignacion", "IdEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("team_management_backend.Entities.TipoAsignacion", "TipoAsignacion")
                        .WithMany("Asignaciones")
                        .HasForeignKey("IdTipoAsignacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("TipoAsignacion");
                });

            modelBuilder.Entity("team_management_backend.Entities.CaracteristicasTransporte", b =>
                {
                    b.HasOne("team_management_backend.Entities.Equipo", "Equipo")
                        .WithOne("CaracteristicasTransporte")
                        .HasForeignKey("team_management_backend.Entities.CaracteristicasTransporte", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("team_management_backend.Entities.Equipo", b =>
                {
                    b.HasOne("team_management_backend.Entities.Garantia", "Garantia")
                        .WithMany()
                        .HasForeignKey("IdGarantia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("team_management_backend.Entities.Poliza", "Poliza")
                        .WithMany()
                        .HasForeignKey("IdPoliza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("team_management_backend.Entities.TipoEquipo", "TipoEquipo")
                        .WithMany("Equipos")
                        .HasForeignKey("IdTipoEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garantia");

                    b.Navigation("Poliza");

                    b.Navigation("TipoEquipo");
                });

            modelBuilder.Entity("team_management_backend.Entities.EquipoHardware", b =>
                {
                    b.HasOne("team_management_backend.Entities.Equipo", "Equipo")
                        .WithMany("EquiposHardware")
                        .HasForeignKey("IdEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("team_management_backend.Entities.Hardware", "Hardware")
                        .WithMany("EquiposHardware")
                        .HasForeignKey("IdHardware")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Hardware");
                });

            modelBuilder.Entity("team_management_backend.Entities.EquipoSoftware", b =>
                {
                    b.HasOne("team_management_backend.Entities.Equipo", "Equipo")
                        .WithMany("EquiposSoftware")
                        .HasForeignKey("IdEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("team_management_backend.Entities.Software", "Software")
                        .WithMany("EquiposSoftware")
                        .HasForeignKey("IdSoftware")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("team_management_backend.Entities.Equipo", b =>
                {
                    b.Navigation("CaracteristicasTransporte");

                    b.Navigation("EquiposHardware");

                    b.Navigation("EquiposSoftware");
                });

            modelBuilder.Entity("team_management_backend.Entities.Hardware", b =>
                {
                    b.Navigation("EquiposHardware");
                });

            modelBuilder.Entity("team_management_backend.Entities.Software", b =>
                {
                    b.Navigation("EquiposSoftware");
                });

            modelBuilder.Entity("team_management_backend.Entities.TipoAsignacion", b =>
                {
                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("team_management_backend.Entities.TipoEquipo", b =>
                {
                    b.Navigation("Equipos");
                });
#pragma warning restore 612, 618
        }
    }
}
